{
  "SQL Snippet Challenge": {
    "prefix": "codechallenge-sql",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: code-snippet",
      "* language: sql",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "* data_path: /${3:<!--The path to the folder with the .sql file-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${4:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "```sql",
      "${5:<!-- -- Write a query to select...-->}",
      "```",
      "",
      "##### !end-placeholder",
      "",
      "##### !tests",
      "",
      "##### !end-tests",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Custom Snippet Challenge": {
    "prefix": "codechallenge-custom",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: custom-snippet",
      "* language: javascript",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "* docker_directory_path: /${3:<!--The folder with the challenge setup-->}",
      "* validate_fork: true",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${4:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "<!-- submitted text is placed in a file named submission.txt in the root of the docker_directory_path -->",
      "##### !placeholder",
      "",
      "```js",
      "${5: function myFunction(input) {",
      "// Write a function that...",
      "\\},}",
      "```",
      "",
      "##### !end-placeholder",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Testable Project Challenge": {
    "prefix": "testableprojectchallenge",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: testable-project",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "* upstream: ${3:<!--The upstream repo URL-->}",
      "* validate_fork: true",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${4:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "${5:<!--Placeholder text-->}",
      "",
      "##### !end-placeholder",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Project Challenge": {
    "prefix": "projectchallenge",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: project",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "${4:<!--Placeholder text-->}",
      "",
      "##### !end-placeholder",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Checkbox Challenge": {
    "prefix": "checkbox",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: checkbox",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !options",
      "",
      "${4:* Option 1",
      "* Option 2",
      "* Option 3}",
      "",
      "##### !end-options",
      "",
      "##### !answer",
      "",
      "${5:* Option 1",
      "* Option 2}",
      "",
      "##### !end-answer",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Multiple Choice Challenge": {
    "prefix": "multiplechoice",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: multiple-choice",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !options",
      "",
      "${4:* Option 1",
      "* Option 2",
      "* Option 3}",
      "",
      "##### !end-options",
      "",
      "##### !answer",
      "",
      "${5:<!--The _text_ of the answer-->}",
      "",
      "##### !end-answer",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Number Challenge": {
    "prefix": "numberchallenge",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: number",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "* decimal: ${3:<!--Decimal precision-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${4:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "${5:<!--Placeholder text-->}",
      "",
      "##### !end-placeholder",
      "",
      "##### !answer",
      "${6:<!-- [2.4]-->}",
      "##### !end-answer",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Paragraph Challenge": {
    "prefix": "paragraphchallenge",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: paragraph",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "${4:<!--Placeholder text-->}",
      "",
      "##### !end-placeholder",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Short Answer Challenge": {
    "prefix": "shortanswerchallenge",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: short-answer",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !answer",
      "",
      "${4:<!--Answer (can be regex)-->}",
      "",
      "##### !end-answer",
      "",
      "##### !placeholder",
      "",
      "${5:<!--Placeholder text-->}",
      "",
      "##### !end-placeholder",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "JS Code Challenge": {
    "prefix": "codechallenge-js",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: code-snippet",
      "* language: javascript",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "```js",
      "${4: function myFunction(input) {",
      "// Write a function that...",
      "\\},}",
      "```",
      "",
      "##### !end-placeholder",
      "",
      "##### !tests",
      "",
      "```js",
      "${5:",
      "describe('myFunction', function() {",
      "",
      "it(\"does what it is suposed to do\", function() {",
      "expect(myFunction(), \"Error message\").to.deep.eq(true)",
      "\\})",
      "\\})",
      "}",
      "```",
      "",
      "##### !end-tests",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Local JS Code Challenge": {
    "prefix": "codechallenge-local-js",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: local-snippet",
      "* language: javascript",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "```js",
      "${4: function myFunction(input) {",
      "// Write a function that...",
      "\\},}",
      "```",
      "",
      "##### !end-placeholder",
      "",
      "##### !tests",
      "",
      "```js",
      "${5:",
      "describe('myFunction', function() {",
      "",
      "it(\"does what it is suposed to do\", function() {",
      "expect(myFunction(), \"Error message\").to.deep.eq(true)",
      "\\})",
      "\\})",
      "}",
      "```",
      "",
      "##### !end-tests",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Python 2.7 Code Challenge": {
    "prefix": "codechallenge-py27",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "##### !challenge",
      "",
      "* type: code-snippet",
      "* language: python2.7",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--short friendly title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--This can be regular **Markdown**-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "```python",
      "${4:",
      "def do_nothing():",
      "return None",
      "}",
      "```",
      "",
      "##### !end-placeholder",
      "",
      "##### !tests",
      "```python",
      "${5:",
      "import main",
      "import unittest",
      "",
      "",
      "class TestPython1(unittest.TestCase):",
      "def test_one(self):",
      "self.assertEqual(1,0)",
      "",
      "}",
      "```",
      "##### !end-tests",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Python 3.6 Code Challenge": {
    "prefix": "codechallenge-py36",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: code-snippet",
      "* language: python3.6",
      "* id: ${1:<!--guid-goes-here-->}",
      "* title: ${2:<!--short friendly title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!--This can be regular **Markdown**-->}",
      "",
      "##### !end-question",
      "",
      "##### !placeholder",
      "",
      "```python",
      "${4:",
      "def do_nothing():",
      "return None",
      "}",
      "```",
      "",
      "##### !end-placeholder",
      "",
      "##### !tests",
      "```python",
      "${5:",
      "import main",
      "import unittest",
      "",
      "",
      "class TestPython1(unittest.TestCase):",
      "def test_one(self):",
      "self.assertEqual(1,0)",
      "",
      "}",
      "```",
      "##### !end-tests",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Java Code Challenge": {
    "prefix": "codechallenge-java",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: code-snippet",
      "* language: java",
      "* id: ${1:<!--guid-goes-here-->}",
      "* title: ${2:<!--short friendly title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!--`points: 1`: the number of points for scoring as a checkpoint-->",
      "<!--`topics: python, pandas`: the topics for analyzing points-->",
      "",
      "##### !question",
      "",
      "${3:<!-- Instructions. Can be regular **Markdown**-->}",
      "",
      "##### !end-question",
      "",
      "##### !setup",
      "",
      "// [include any imports specific to your tests]",
      "import java.io.IOException;",
      "",
      "// [to allow student to submit simple statements, wrap the submission",
      "//  using the !setup and !tests sections; example below]",
      "class VariableChallenge {",
      "",
      "public static String run() {",
      "// Start Student Code",
      "",
      "##### !end-setup",
      "",
      "##### !placeholder",
      "",
      "// ${4:<!--text inserted into the text box the first time the page is viewed-->}",
      "",
      "##### !end-placeholder",
      "",
      "##### !tests",
      "",
      "// End Student Code",
      "return foo;",
      "}",
      "}",
      "",
      "// public test class name **must** be `SnippetTest` to match the generated file name",
      "public class SnippetTest {",
      "",
      "@Test",
      "public void someTest() {",
      "assertEquals(\"Value of variable 'foo'\", \"bar\", VariableChallenge.run());",
      "}",
      "}",
      "",
      "##### !end-tests",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "${5:<!--explanation shows up after the student answers-->}",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  },
  "Task List Challenge": {
    "prefix": "tasklistchallenge",
    "body": [
      "<!--BEGIN CHALLENGE-->",
      "",
      "### !challenge",
      "",
      "* type: tasklist",
      "* id: ${1:<!--unique-id (command-option-u)-->}",
      "* title: ${2:<!--A short title-->}",
      "<!--Other optional fields (checkpoints only) -->",
      "<!-- * points: [1] (optional, the number of points for scoring as a checkpoint) -->",
      "<!-- * topics: [python, pandas] (optional the topics for analyzing points) -->",
      "",
      "##### !question",
      "",
      "${3:<!--Your question text (can be regular **markdown**)-->}",
      "",
      "##### !end-question",
      "",
      "##### !options",
      "",
      "${4:* Option 1",
      "* Option 2",
      "* Option 3}",
      "",
      "##### !end-options",
      "",
      "<!--optional-->",
      "##### !hint",
      "",
      "##### !end-hint",
      "",
      "<!--optional, checkpoints only-->",
      "##### !rubric",
      "",
      "##### !end-rubric",
      "",
      "<!--optional-->",
      "##### !explanation",
      "",
      "##### !end-explanation",
      "",
      "### !end-challenge",
      "",
      "<!--END CHALLENGE-->"
    ]
  }
}
